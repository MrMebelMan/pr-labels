name: Require PR Labels

on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled]

jobs:
  check-labels:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Auto-label and check for labels
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            // Get current labels
            const currentLabels = pullRequest.labels.map(label => label.name);
            console.log(`Current labels: ${currentLabels.join(', ') || 'none'}`);

            // Get list of changed files
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const changedFiles = files.map(file => file.filename);
            console.log(`Changed files: ${changedFiles.join(', ')}`);

            // Auto-label based on file patterns
            const labelsToAdd = [];
            
            // Documentation changes
            if (changedFiles.some(file => 
                file.endsWith('.md') || 
                file.includes('copilot-instructions') ||
                file.includes('README')
            )) {
              if (!currentLabels.includes('documentation')) {
                labelsToAdd.push('documentation');
              }
            }
            
            // Workflow changes
            if (changedFiles.some(file => file.includes('.github/workflows'))) {
              if (!currentLabels.includes('enhancement')) {
                labelsToAdd.push('enhancement');
              }
            }
            
            // Add labels if any were identified and not already present
            let labelsAdded = false;
            if (labelsToAdd.length > 0) {
              try {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: labelsToAdd
                });
                console.log(`Added labels: ${labelsToAdd.join(', ')}`);
                labelsAdded = true;
              } catch (error) {
                console.log(`Failed to add labels: ${error.message}`);
              }
            }

            // Get final labels (either current labels or updated ones)
            let finalLabels = currentLabels;
            if (labelsAdded) {
              // Wait a moment for API consistency and re-fetch labels
              await new Promise(resolve => setTimeout(resolve, 1000));
              const { data: updatedPR } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
              });
              finalLabels = updatedPR.labels.map(label => label.name);
            }
            
            if (finalLabels.length === 0) {
              core.setFailed('Pull request must have at least one label for release notes generation.');
              return;
            }

            console.log(`Final PR labels: ${finalLabels.join(', ')}`);